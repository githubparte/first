name: Example Workflow

on:
  push:

jobs:
  generate-values:
    runs-on: ubuntu-latest
    outputs:
      values: ${{ steps.generate_values.outputs.values }}  # Output from this job
    steps:
      - name: Generate Values
        id: generate_values
        run: |
          aaa=true
          bbb=true
          ccc=true

          # Initialize an empty array
          values=()

          # Check each variable and add to the array if true
          if [ "$aaa" = true ]; then
              values+=("a") # Add "a" if aaa is true
          fi
          if [ "$bbb" = true ]; then
              values+=("b") # Add "b" if bbb is true
          fi
          if [ "$ccc" = true ]; then
              values+=("c") # Add "c" if ccc is true
          fi

          # Format the final string as a JSON array
          printf -v joined '"%s", ' "${values[@]}"
          joined="${joined%, }"  # Remove the trailing comma and space
          result="[$joined]"  # Format as a JSON array

          echo "::set-output name=values::$result"  # Set the output for the job

  print-values:
    runs-on: ubuntu-latest
    needs: generate-values  # Wait for the previous job to finish
    steps:
      - name: Print Generated Values
        run: |
          echo "Generated values: ${{ needs.generate-values.outputs.values }}"

  use-values:
    runs-on: ubuntu-latest
    needs: print-values  # Wait for the print-values job to finish
    strategy:
      matrix:
        value: ${{ fromJson(needs.generate-values.outputs.values) }}  # Parse the output as a matrix
    steps:
      - name: Use Matrix Value
        run: |
          echo "Using matrix value: ${{ matrix.value }}"
